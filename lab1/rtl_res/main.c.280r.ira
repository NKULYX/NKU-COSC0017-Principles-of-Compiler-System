
;; Function rank (rank, funcdef_no=0, decl_uid=2317, cgraph_uid=1, symbol_order=2)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best AREG, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a4(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a5(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000

   Insn 32(l0): point = 0
   Insn 31(l0): point = 2
   Insn 27(l0): point = 4
   Insn 24(l0): point = 6
   Insn 16(l0): point = 9
   Insn 15(l0): point = 11
   Insn 14(l0): point = 13
   Insn 13(l0): point = 15
   Insn 22(l0): point = 18
   Insn 21(l0): point = 20
   Insn 20(l0): point = 22
   Insn 34(l0): point = 25
   Insn 9(l0): point = 27
   Insn 8(l0): point = 29
   Insn 7(l0): point = 31
   Insn 3(l0): point = 33
   Insn 2(l0): point = 35
 a0(r83): [3..4]
 a1(r82): [5..6]
 a2(r87): [21..22]
 a3(r85): [12..13]
 a4(r86): [14..15]
 a5(r84): [28..29]
Compressing live ranges: from 38 to 12 - 31%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r82): [2..3]
 a2(r87): [8..9]
 a3(r85): [4..5]
 a4(r86): [6..7]
 a5(r84): [10..11]
  pref0:a0(r83)<-hr0@1500
  regions=1, blocks=6, points=12
    allocnos=6 (big 0), copies=0, conflicts=0, ranges=6
Disposition:
    1:r82  l0     0    0:r83  l0     0    5:r84  l0     0    3:r85  l0     0
    4:r86  l0     0    2:r87  l0     0
+++Costs: overall -1000, reg -1000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


rank

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,5u} r7={1d,5u} r16={1d,4u} r17={3d,1u} r19={1d,18u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 72{29d,43u,0e} in 17{17 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [1 start+0 S4 A32])
        (reg:SI 5 di [ start ])) "../main.c":9:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ start ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 end+0 S4 A32])
        (reg:SI 4 si [ end ])) "../main.c":9:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ end ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ans+0 S4 A32])
        (const_int 1 [0x1])) "../main.c":10:9 67 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 84)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [1 start+0 S4 A32])) "../main.c":11:14 67 {*movsi_internal}
     (nil))
(insn 9 8 34 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (reg:SI 84)) "../main.c":11:14 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84)
        (nil)))
(jump_insn 34 9 35 2 (set (pc)
        (label_ref 17)) "../main.c":11:5 660 {jump}
     (nil)
 -> 17)
(barrier 35 34 19)
(code_label 19 35 12 3 3 (nil) [1 uses])
(note 12 19 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:SI 86)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ans+0 S4 A32])) "../main.c":13:13 67 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (parallel [
            (set (reg:SI 85)
                (mult:SI (reg:SI 86)
                    (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":13:13 317 {*mulsi3_1}
     (expr_list:REG_DEAD (reg:SI 86)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 15 14 16 3 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ans+0 S4 A32])
        (reg:SI 85)) "../main.c":13:13 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85)
        (nil)))
(insn 16 15 17 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":11:36 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 17 16 18 4 2 (nil) [1 uses])
(note 18 17 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 18 21 4 (set (reg:SI 87)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../main.c":11:5 67 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 87)
            (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -24 [0xffffffffffffffe8])) [1 end+0 S4 A32]))) "../main.c":11:5 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 87)
        (nil)))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "../main.c":11:5 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 19)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 27 5 (set (reg:SI 82 [ _7 ])
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 ans+0 S4 A32])) "../main.c":15:12 67 {*movsi_internal}
     (nil))
(insn 27 24 31 5 (set (reg:SI 83 [ <retval> ])
        (reg:SI 82 [ _7 ])) "../main.c":15:12 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 82 [ _7 ])
        (nil)))
(insn 31 27 32 5 (set (reg/i:SI 0 ax)
        (reg:SI 83 [ <retval> ])) "../main.c":16:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ <retval> ])
        (nil)))
(insn 32 31 0 5 (use (reg/i:SI 0 ax)) "../main.c":16:1 -1
     (nil))

;; Function main (main, funcdef_no=1, decl_uid=2324, cgraph_uid=2, symbol_order=3)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 6 n_edges 6 count 6 (    1)
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 6.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 39.
verify found no changes in insn with uid = 55.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r97: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r97,l0) best SIREG, allocno GENERAL_REGS
    r96: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r96,l0) best SIREG, allocno GENERAL_REGS
    r95: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r95,l0) best DREG, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r91,l0) best AREG, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r89,l0) best AREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r84,l0) best SIREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r93,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a2(r97,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r96,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r94,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a5(r91,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a6(r89,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a7(r95,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:8000 NO_REX_SSE_REGS:8000 SSE_REGS:8000 MMX_REGS:13000 INT_SSE_REGS:13000 ALL_REGS:212000 MEM:6000
  a8(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a9(r88,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a10(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a11(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a12(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a13(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a14(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a15(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000

   Insn 64(l0): point = 0
   Insn 63(l0): point = 2
   Insn 59(l0): point = 4
   Insn 56(l0): point = 6
   Insn 55(l0): point = 8
   Insn 54(l0): point = 10
   Insn 53(l0): point = 12
   Insn 52(l0): point = 14
   Insn 51(l0): point = 16
   Insn 50(l0): point = 18
   Insn 49(l0): point = 20
   Insn 48(l0): point = 22
   Insn 47(l0): point = 24
   Insn 46(l0): point = 26
   Insn 45(l0): point = 28
   Insn 44(l0): point = 30
   Insn 43(l0): point = 32
   Insn 42(l0): point = 34
   Insn 39(l0): point = 37
   Insn 38(l0): point = 39
   Insn 37(l0): point = 41
   Insn 36(l0): point = 43
   Insn 35(l0): point = 45
   Insn 34(l0): point = 47
   Insn 33(l0): point = 49
   Insn 32(l0): point = 52
   Insn 31(l0): point = 54
   Insn 30(l0): point = 56
   Insn 29(l0): point = 58
   Insn 28(l0): point = 60
   Insn 27(l0): point = 62
   Insn 26(l0): point = 64
   Insn 25(l0): point = 66
   Insn 24(l0): point = 68
   Insn 23(l0): point = 70
   Insn 22(l0): point = 72
   Insn 21(l0): point = 74
   Insn 20(l0): point = 76
   Insn 19(l0): point = 78
   Insn 66(l0): point = 81
   Insn 14(l0): point = 83
   Insn 13(l0): point = 85
   Insn 11(l0): point = 88
   Insn 10(l0): point = 90
   Insn 9(l0): point = 92
   Insn 8(l0): point = 94
   Insn 6(l0): point = 96
   Insn 5(l0): point = 98
 a0(r93): [3..4]
 a1(r92): [5..6]
 a2(r97): [15..16]
 a3(r96): [44..45]
 a4(r94): [48..49]
 a5(r91): [50..52]
 a6(r89): [51..62]
 a7(r95): [49..50]
 a8(r90): [59..60]
 a9(r88): [67..70]
 a10(r84): [69..78]
 a11(r87): [71..72]
 a12(r86): [73..74]
 a13(r85): [73..76]
 a14(r83): [91..92]
 a15(r82): [91..94]
Compressing live ranges: from 101 to 23 - 22%
Ranges after the compression:
 a0(r93): [0..1]
 a1(r92): [2..3]
 a2(r97): [4..5]
 a3(r96): [6..7]
 a4(r94): [8..9]
 a5(r91): [10..12]
 a6(r89): [11..14]
 a7(r95): [9..10]
 a8(r90): [13..14]
 a9(r88): [15..16]
 a10(r84): [15..20]
 a11(r87): [17..18]
 a12(r86): [19..20]
 a13(r85): [19..20]
 a14(r83): [21..22]
 a15(r82): [21..22]
  pref0:a2(r97)<-hr4@1500
  pref1:a3(r96)<-hr4@1500
  pref2:a7(r95)<-hr1@1000
  pref3:a4(r94)<-hr0@1000
  pref4:a0(r93)<-hr0@1500
  pref5:a5(r91)<-hr0@1500
  pref6:a8(r90)<-hr4@1500
  pref7:a6(r89)<-hr0@2500
  pref8:a9(r88)<-hr5@1500
  pref9:a10(r84)<-hr4@1500
  regions=1, blocks=6, points=23
    allocnos=16 (big 0), copies=0, conflicts=0, ranges=16
Disposition:
   15:r82  l0     1   14:r83  l0     0   10:r84  l0     1   13:r85  l0     2
   12:r86  l0     0   11:r87  l0     0    9:r88  l0     0    6:r89  l0     3
    8:r90  l0     0    5:r91  l0     1    1:r92  l0     0    0:r93  l0     0
    4:r94  l0     0    7:r95  l0     2    3:r96  l0     0    2:r97  l0     0
+++Costs: overall -8000, reg -8000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={10d,6u} r1={7d} r2={7d} r4={11d,4u} r5={13d,6u} r6={1d,5u} r7={1d,11u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r16={1d,4u} r17={18d,1u} r18={6d} r19={1d,25u} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={7d} r37={7d} r38={6d} r39={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,2u} r90={1d,1u} r91={1d,2u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d} r96={1d,1u} r97={1d,1u} 
;;    total ref usage 541{462d,79u,0e} in 48{42 regular + 6 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f8e186f4f30 *.LC0>)) "../main.c":21:5 66 {*movdi_internal}
     (nil))
(call_insn 6 5 8 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8e1861d100 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "../main.c":21:5 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 6 9 2 (set (reg:SI 82 [ m.0_1 ])
        (const_int 2 [0x2])) "../main.c":29:11 67 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 83 [ N.1_2 ])
        (const_int 5 [0x5])) "../main.c":29:11 67 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 82 [ m.0_1 ])
            (reg:SI 83 [ N.1_2 ]))) "../main.c":29:8 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 83 [ N.1_2 ])
        (expr_list:REG_DEAD (reg:SI 82 [ m.0_1 ])
            (nil))))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "../main.c":29:8 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 17)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f8e18704000 *.LC1>)) "../main.c":31:9 66 {*movdi_internal}
     (nil))
(call_insn 14 13 66 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8e1861d100 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "../main.c":31:9 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 66 14 67 3 (set (pc)
        (label_ref 40)) 660 {jump}
     (nil)
 -> 40)
(barrier 67 66 17)
(code_label 17 67 18 4 6 (nil) [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:SI 84 [ N.2_3 ])
        (const_int 5 [0x5])) "../main.c":35:19 67 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:SI 85 [ N.3_4 ])
        (const_int 5 [0x5])) "../main.c":35:26 67 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:SI 86 [ m.4_5 ])
        (const_int 2 [0x2])) "../main.c":35:26 67 {*movsi_internal}
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg:SI 87 [ _6 ])
                (minus:SI (reg:SI 85 [ N.3_4 ])
                    (reg:SI 86 [ m.4_5 ])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":35:26 246 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 86 [ m.4_5 ])
        (expr_list:REG_DEAD (reg:SI 85 [ N.3_4 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 23 22 24 4 (parallel [
            (set (reg:SI 88 [ _7 ])
                (plus:SI (reg:SI 87 [ _6 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":35:19 190 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 87 [ _6 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 24 23 25 4 (set (reg:SI 4 si)
        (reg:SI 84 [ N.2_3 ])) "../main.c":35:19 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ N.2_3 ])
        (nil)))
(insn 25 24 26 4 (set (reg:SI 5 di)
        (reg:SI 88 [ _7 ])) "../main.c":35:19 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88 [ _7 ])
        (nil)))
(call_insn 26 25 27 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rank") [flags 0x3]  <function_decl 0x7f8e186ef800 rank>) [0 rank S1 A8])
            (const_int 0 [0]))) "../main.c":35:19 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 27 26 28 4 (set (reg:SI 89 [ _8 ])
        (reg:SI 0 ax)) "../main.c":35:19 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 28 27 29 4 (set (reg:SI 90 [ m.5_9 ])
        (const_int 2 [0x2])) "../main.c":35:40 67 {*movsi_internal}
     (nil))
(insn 29 28 30 4 (set (reg:SI 4 si)
        (reg:SI 90 [ m.5_9 ])) "../main.c":35:40 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90 [ m.5_9 ])
        (nil)))
(insn 30 29 31 4 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "../main.c":35:40 67 {*movsi_internal}
     (nil))
(call_insn 31 30 32 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rank") [flags 0x3]  <function_decl 0x7f8e186ef800 rank>) [0 rank S1 A8])
            (const_int 0 [0]))) "../main.c":35:40 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 32 31 33 4 (set (reg:SI 91 [ _10 ])
        (reg:SI 0 ax)) "../main.c":35:40 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 33 32 34 4 (parallel [
            (set (reg:SI 94)
                (div:SI (reg:SI 89 [ _8 ])
                    (reg:SI 91 [ _10 ])))
            (set (reg:SI 95)
                (mod:SI (reg:SI 89 [ _8 ])
                    (reg:SI 91 [ _10 ])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":35:13 351 {*divmodsi4}
     (expr_list:REG_DEAD (reg:SI 91 [ _10 ])
        (expr_list:REG_DEAD (reg:SI 89 [ _8 ])
            (expr_list:REG_UNUSED (reg:SI 95)
                (expr_list:REG_UNUSED (reg:CC 17 flags)
                    (nil))))))
(insn 34 33 35 4 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 cnm+0 S4 A32])
        (reg:SI 94)) "../main.c":35:13 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94)
        (nil)))
(insn 35 34 36 4 (set (reg:SI 96)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 cnm+0 S4 A32])) "../main.c":36:9 67 {*movsi_internal}
     (nil))
(insn 36 35 37 4 (set (reg:SI 4 si)
        (reg:SI 96)) "../main.c":36:9 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 96)
        (nil)))
(insn 37 36 38 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f8e18704090 *.LC2>)) "../main.c":36:9 66 {*movdi_internal}
     (nil))
(insn 38 37 39 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "../main.c":36:9 69 {*movqi_internal}
     (nil))
(call_insn 39 38 40 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f8e1861ca00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "../main.c":36:9 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 40 39 41 5 7 (nil) [1 uses])
(note 41 40 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 5 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
        (const_int 1 [0x1])) "../main.c":38:9 67 {*movsi_internal}
     (nil))
(insn 43 42 44 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":39:7 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 44 43 45 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":40:7 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 45 44 46 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":41:7 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 46 45 47 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":42:7 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 47 46 48 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":43:7 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 48 47 49 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":44:7 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 49 48 50 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":45:7 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 50 49 51 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":46:7 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 51 50 52 5 (set (reg:SI 97)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 a+0 S4 A32])) "../main.c":47:5 67 {*movsi_internal}
     (nil))
(insn 52 51 53 5 (set (reg:SI 4 si)
        (reg:SI 97)) "../main.c":47:5 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 97)
        (nil)))
(insn 53 52 54 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f8e18704090 *.LC2>)) "../main.c":47:5 66 {*movdi_internal}
     (nil))
(insn 54 53 55 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "../main.c":47:5 69 {*movqi_internal}
     (nil))
(call_insn 55 54 56 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f8e1861ca00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "../main.c":47:5 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 56 55 59 5 (set (reg:SI 92 [ _29 ])
        (const_int 0 [0])) "../main.c":48:12 67 {*movsi_internal}
     (nil))
(insn 59 56 63 5 (set (reg:SI 93 [ <retval> ])
        (reg:SI 92 [ _29 ])) 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 92 [ _29 ])
        (nil)))
(insn 63 59 64 5 (set (reg/i:SI 0 ax)
        (reg:SI 93 [ <retval> ])) "../main.c":49:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 93 [ <retval> ])
        (nil)))
(insn 64 63 0 5 (use (reg/i:SI 0 ax)) "../main.c":49:1 -1
     (nil))
