
;; Function rank (rank, funcdef_no=0, decl_uid=2317, cgraph_uid=1, symbol_order=2)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 9:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 14:  (0) r  (1) 0  (2) mr {*mulsi3_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 16:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 32: point = 0, n_alt = -1
   Insn 31: point = 0, n_alt = -2
   Insn 27: point = 1, n_alt = -2
   Insn 24: point = 3, n_alt = 0
  BB 4
   Insn 22: point = 4, n_alt = -1
   Insn 21: point = 4, n_alt = 1
   Insn 20: point = 5, n_alt = 0
  BB 2
   Insn 34: point = 6, n_alt = -1
   Insn 9: point = 6, n_alt = 1
   Insn 8: point = 7, n_alt = 0
   Insn 7: point = 8, n_alt = 1
   Insn 3: point = 8, n_alt = 1
   Insn 2: point = 8, n_alt = 1
  BB 3
   Insn 16: point = 8, n_alt = 1
   Insn 15: point = 8, n_alt = 1
   Insn 14: point = 9, n_alt = 2
   Insn 13: point = 11, n_alt = 0
 r82: [2..3]
 r83: [0..1]
 r84: [6..7]
 r85: [8..9]
 r86: [10..11]
 r87: [4..5]
Compressing live ranges: from 12 to 12 - 100%
Ranges after the compression:
 r82: [2..3]
 r83: [0..1]
 r84: [6..7]
 r85: [8..9]
 r86: [10..11]
 r87: [4..5]

********** Assignment #1: **********


********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=0, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 24
changing reg in insn 27
changing reg in insn 27
changing reg in insn 31
changing reg in insn 8
changing reg in insn 9
changing reg in insn 14
changing reg in insn 15
changing reg in insn 13
changing reg in insn 14
changing reg in insn 20
changing reg in insn 21
deleting insn with uid = 27.
deleting insn with uid = 31.
starting the processing of deferred insns
ending the processing of deferred insns


rank

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 17 [flags]
;;  ref usage 	r0={6d,6u} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,18u} r7={1d,5u} r17={3d,1u} r19={1d,1u} r20={1d} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r36={1d} r37={1d} 
;;    total ref usage 59{26d,33u,0e} in 15{15 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 start+0 S4 A32])
        (reg:SI 5 di [ start ])) "../main.c":9:1 67 {*movsi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 end+0 S4 A32])
        (reg:SI 4 si [ end ])) "../main.c":9:1 67 {*movsi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 ans+0 S4 A32])
        (const_int 1 [0x1])) "../main.c":10:9 67 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 0 ax [84])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 start+0 S4 A32])) "../main.c":11:14 67 {*movsi_internal}
     (nil))
(insn 9 8 34 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (reg:SI 0 ax [84])) "../main.c":11:14 67 {*movsi_internal}
     (nil))
(jump_insn 34 9 35 2 (set (pc)
        (label_ref 17)) "../main.c":11:5 660 {jump}
     (nil)
 -> 17)
(barrier 35 34 19)
(code_label 19 35 12 3 3 (nil) [1 uses])
(note 12 19 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:SI 0 ax [86])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 ans+0 S4 A32])) "../main.c":13:13 67 {*movsi_internal}
     (nil))
(insn 14 13 15 3 (parallel [
            (set (reg:SI 0 ax [85])
                (mult:SI (reg:SI 0 ax [86])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":13:13 317 {*mulsi3_1}
     (nil))
(insn 15 14 16 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 ans+0 S4 A32])
        (reg:SI 0 ax [85])) "../main.c":13:13 67 {*movsi_internal}
     (nil))
(insn 16 15 17 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":11:36 190 {*addsi_1}
     (nil))
(code_label 17 16 18 4 2 (nil) [1 uses])
(note 18 17 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 18 21 4 (set (reg:SI 0 ax [87])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "../main.c":11:5 67 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [87])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 end+0 S4 A32]))) "../main.c":11:5 11 {*cmpsi_1}
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "../main.c":11:5 659 {*jcc}
     (nil)
 -> 19)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 32 5 (set (reg:SI 0 ax [orig:82 _7 ] [82])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 ans+0 S4 A32])) "../main.c":15:12 67 {*movsi_internal}
     (nil))
(insn 32 24 36 5 (use (reg/i:SI 0 ax)) "../main.c":16:1 -1
     (nil))
(note 36 32 0 NOTE_INSN_DELETED)

;; Function main (main, funcdef_no=1, decl_uid=2324, cgraph_uid=2, symbol_order=3)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-16, prev_offset=0)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 13:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 22:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=99 from oldreg=85, assigning class GENERAL_REGS to r99
   22: {r99:SI=r99:SI-r86:SI;clobber flags:CC;}
      REG_DEAD r86:SI
      REG_DEAD r85:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   69: r99:SI=r85:SI
    Inserting insn reload after:
   70: r87:SI=r99:SI

          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 23:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (1) rBwBz {*call_value}
            1 Small class reload: reject+=3
            1 Non input pseudo reload: reject++
            1 Early clobber: reject++
            2 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 33:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
      Creating newreg=100 from oldreg=89, assigning class AREG to r100
      Creating newreg=101 from oldreg=95, assigning class DREG to r101
   33: {r100:SI=r100:SI/r91:SI;r101:SI=r100:SI%r91:SI;clobber flags:CC;}
      REG_DEAD r91:SI
      REG_DEAD r89:SI
      REG_UNUSED r95:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
   71: r100:SI=r89:SI
    Inserting insn reload after:
   72: r94:SI=r100:SI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 37:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 38:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 43:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 44:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 45:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 46:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 47:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 48:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 49:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 50:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 53:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 54:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5

********** Pseudo live ranges #1: **********

  BB 5
   Insn 64: point = 0, n_alt = -1
   Insn 63: point = 0, n_alt = -2
   Insn 59: point = 1, n_alt = -2
   Insn 56: point = 3, n_alt = 0
   Insn 55: point = 4, n_alt = 0
   Insn 54: point = 4, n_alt = 3
   Insn 53: point = 4, n_alt = 4
   Insn 52: point = 4, n_alt = -2
   Insn 51: point = 5, n_alt = 0
   Insn 50: point = 6, n_alt = 1
   Insn 49: point = 6, n_alt = 1
   Insn 48: point = 6, n_alt = 1
   Insn 47: point = 6, n_alt = 1
   Insn 46: point = 6, n_alt = 1
   Insn 45: point = 6, n_alt = 1
   Insn 44: point = 6, n_alt = 1
   Insn 43: point = 6, n_alt = 1
   Insn 42: point = 6, n_alt = 1
  BB 3
   Insn 66: point = 6, n_alt = -1
   Insn 14: point = 6, n_alt = 0
   Insn 13: point = 6, n_alt = 4
  BB 4
   Insn 39: point = 6, n_alt = 0
   Insn 38: point = 6, n_alt = 3
   Insn 37: point = 6, n_alt = 4
   Insn 36: point = 6, n_alt = -2
   Insn 35: point = 7, n_alt = 0
   Insn 34: point = 8, n_alt = 1
   Insn 72: point = 9, n_alt = -2
	Hard reg 0 is preferable by r100 with profit 1000
   Insn 33: point = 11, n_alt = 0
   Insn 71: point = 13, n_alt = -2
	Hard reg 0 is preferable by r100 with profit 1000
	Hard reg 3 is preferable by r100 with profit 1000
   Insn 32: point = 15, n_alt = -2
   Insn 31: point = 16, n_alt = 0
   Insn 30: point = 16, n_alt = 0
   Insn 29: point = 16, n_alt = -2
   Insn 28: point = 17, n_alt = 0
   Insn 27: point = 18, n_alt = -2
   Insn 26: point = 19, n_alt = 0
   Insn 25: point = 19, n_alt = -2
   Insn 24: point = 20, n_alt = -2
   Insn 23: point = 21, n_alt = 0
   Insn 70: point = 23, n_alt = -2
	Hard reg 0 is preferable by r99 with profit 1000
   Insn 22: point = 25, n_alt = 0
   Insn 69: point = 27, n_alt = -2
	Hard reg 0 is preferable by r99 with profit 1000
	Hard reg 2 is preferable by r99 with profit 1000
   Insn 21: point = 29, n_alt = 0
   Insn 20: point = 30, n_alt = 0
   Insn 19: point = 31, n_alt = 0
  BB 2
   Insn 11: point = 32, n_alt = -1
   Insn 10: point = 32, n_alt = 0
   Insn 9: point = 33, n_alt = 0
   Insn 8: point = 34, n_alt = 0
   Insn 6: point = 35, n_alt = 0
   Insn 5: point = 35, n_alt = 4
 r82: [32..34]
 r83: [32..33]
 r84: [20..31]
 r85: [28..30]
 r86: [26..29]
 r87: [22..23]
 r88: [19..21]
 r89: [14..18]
 r90: [16..17]
 r91: [12..15]
 r92: [2..3]
 r93: [0..1]
 r94: [8..9]
 r96: [6..7]
 r97: [4..5]
 r99: [24..27]
 r100: [10..13]
 r101: [11..12]
Compressing live ranges: from 35 to 27 - 77%
Ranges after the compression:
 r82: [25..26]
 r83: [25..26]
 r84: [17..24]
 r85: [23..24]
 r86: [21..24]
 r87: [19..20]
 r88: [17..18]
 r89: [13..16]
 r90: [15..16]
 r91: [11..14]
 r92: [2..3]
 r93: [0..1]
 r94: [8..9]
 r96: [6..7]
 r97: [4..5]
 r99: [21..22]
 r100: [10..12]
 r101: [10..11]

********** Assignment #1: **********

	 Assigning to 100 (cl=AREG, orig=89, freq=3000, tfirst=100, tfreq=3000)...
	   Assign 0 to reload r100 (freq=3000)
	 Assigning to 101 (cl=DREG, orig=95, freq=1000, tfirst=101, tfreq=1000)...
	 Trying 1: spill 91(freq=2000)	 Now best 1(cost=1000, bad_spills=0, insn_pseudos=1)

      Spill r91(hr=1, freq=2000) for r101
	   Assign 1 to reload r101 (freq=1000)
	 Assigning to 99 (cl=GENERAL_REGS, orig=85, freq=3000, tfirst=99, tfreq=3000)...
	   Assign 2 to reload r99 (freq=3000)
  Reassigning non-reload pseudos
	   Assign 4 to r91 (freq=2000)

********** Undoing inheritance #1: **********


********** Pseudos coalescing #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
            1 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 8
changing reg in insn 10
changing reg in insn 9
changing reg in insn 10
changing reg in insn 19
changing reg in insn 24
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 23
changing reg in insn 25
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 56
changing reg in insn 59
changing reg in insn 59
changing reg in insn 63
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 51
changing reg in insn 52
deleting insn with uid = 69.
deleting insn with uid = 72.
deleting insn with uid = 59.
deleting insn with uid = 63.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 6.
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 39.
verify found no changes in insn with uid = 55.


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={19d,16u} r1={10d,2u} r2={9d,2u} r3={1d,1u} r4={12d,6u} r5={13d,6u} r6={1d,25u} r7={1d,11u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r17={18d,1u} r18={6d} r19={1d,1u} r20={7d} r21={7d} r22={7d} r23={7d} r24={7d} r25={7d} r26={7d} r27={7d} r28={6d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={7d} r37={7d} r38={6d} r39={6d} r44={6d} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} 
;;    total ref usage 532{461d,71u,0e} in 48{42 regular + 6 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f8e186f4f30 *.LC0>)) "../main.c":21:5 66 {*movdi_internal}
     (nil))
(call_insn 6 5 8 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8e1861d100 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "../main.c":21:5 677 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 6 9 2 (set (reg:SI 1 dx [orig:82 m.0_1 ] [82])
        (const_int 2 [0x2])) "../main.c":29:11 67 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 ax [orig:83 N.1_2 ] [83])
        (const_int 5 [0x5])) "../main.c":29:11 67 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1 dx [orig:82 m.0_1 ] [82])
            (reg:SI 0 ax [orig:83 N.1_2 ] [83]))) "../main.c":29:8 11 {*cmpsi_1}
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) "../main.c":29:8 659 {*jcc}
     (nil)
 -> 17)
(note 12 11 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f8e18704000 *.LC1>)) "../main.c":31:9 66 {*movdi_internal}
     (nil))
(call_insn 14 13 66 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f8e1861d100 __builtin_puts>) [0 __builtin_puts S1 A8])
            (const_int 0 [0]))) "../main.c":31:9 677 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 66 14 67 3 (set (pc)
        (label_ref 40)) 660 {jump}
     (nil)
 -> 40)
(barrier 67 66 17)
(code_label 17 67 18 4 6 (nil) [1 uses])
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 4 (set (reg:SI 1 dx [orig:84 N.2_3 ] [84])
        (const_int 5 [0x5])) "../main.c":35:19 67 {*movsi_internal}
     (nil))
(insn 20 19 21 4 (set (reg:SI 2 cx [orig:85 N.3_4 ] [85])
        (const_int 5 [0x5])) "../main.c":35:26 67 {*movsi_internal}
     (nil))
(insn 21 20 22 4 (set (reg:SI 0 ax [orig:86 m.4_5 ] [86])
        (const_int 2 [0x2])) "../main.c":35:26 67 {*movsi_internal}
     (nil))
(insn 22 21 70 4 (parallel [
            (set (reg:SI 2 cx [orig:85 N.3_4 ] [85])
                (minus:SI (reg:SI 2 cx [orig:85 N.3_4 ] [85])
                    (reg:SI 0 ax [orig:86 m.4_5 ] [86])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":35:26 246 {*subsi_1}
     (nil))
(insn 70 22 23 4 (set (reg:SI 0 ax [orig:87 _6 ] [87])
        (reg:SI 2 cx [orig:85 N.3_4 ] [85])) "../main.c":35:26 67 {*movsi_internal}
     (nil))
(insn 23 70 24 4 (parallel [
            (set (reg:SI 0 ax [orig:88 _7 ] [88])
                (plus:SI (reg:SI 0 ax [orig:87 _6 ] [87])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":35:19 190 {*addsi_1}
     (nil))
(insn 24 23 25 4 (set (reg:SI 4 si)
        (reg:SI 1 dx [orig:84 N.2_3 ] [84])) "../main.c":35:19 67 {*movsi_internal}
     (nil))
(insn 25 24 26 4 (set (reg:SI 5 di)
        (reg:SI 0 ax [orig:88 _7 ] [88])) "../main.c":35:19 67 {*movsi_internal}
     (nil))
(call_insn 26 25 27 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rank") [flags 0x3]  <function_decl 0x7f8e186ef800 rank>) [0 rank S1 A8])
            (const_int 0 [0]))) "../main.c":35:19 677 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 27 26 28 4 (set (reg:SI 3 bx [orig:89 _8 ] [89])
        (reg:SI 0 ax)) "../main.c":35:19 67 {*movsi_internal}
     (nil))
(insn 28 27 29 4 (set (reg:SI 0 ax [orig:90 m.5_9 ] [90])
        (const_int 2 [0x2])) "../main.c":35:40 67 {*movsi_internal}
     (nil))
(insn 29 28 30 4 (set (reg:SI 4 si)
        (reg:SI 0 ax [orig:90 m.5_9 ] [90])) "../main.c":35:40 67 {*movsi_internal}
     (nil))
(insn 30 29 31 4 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "../main.c":35:40 67 {*movsi_internal}
     (nil))
(call_insn 31 30 32 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rank") [flags 0x3]  <function_decl 0x7f8e186ef800 rank>) [0 rank S1 A8])
            (const_int 0 [0]))) "../main.c":35:40 677 {*call_value}
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 32 31 71 4 (set (reg:SI 4 si [orig:91 _10 ] [91])
        (reg:SI 0 ax)) "../main.c":35:40 67 {*movsi_internal}
     (nil))
(insn 71 32 33 4 (set (reg:SI 0 ax [orig:89 _8 ] [89])
        (reg:SI 3 bx [orig:89 _8 ] [89])) "../main.c":35:13 67 {*movsi_internal}
     (nil))
(insn 33 71 34 4 (parallel [
            (set (reg:SI 0 ax [orig:89 _8 ] [89])
                (div:SI (reg:SI 0 ax [orig:89 _8 ] [89])
                    (reg:SI 4 si [orig:91 _10 ] [91])))
            (set (reg:SI 1 dx [95])
                (mod:SI (reg:SI 0 ax [orig:89 _8 ] [89])
                    (reg:SI 4 si [orig:91 _10 ] [91])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":35:13 351 {*divmodsi4}
     (nil))
(insn 34 33 35 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 cnm+0 S4 A32])
        (reg:SI 0 ax [94])) "../main.c":35:13 67 {*movsi_internal}
     (nil))
(insn 35 34 36 4 (set (reg:SI 0 ax [96])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 cnm+0 S4 A32])) "../main.c":36:9 67 {*movsi_internal}
     (nil))
(insn 36 35 37 4 (set (reg:SI 4 si)
        (reg:SI 0 ax [96])) "../main.c":36:9 67 {*movsi_internal}
     (nil))
(insn 37 36 38 4 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f8e18704090 *.LC2>)) "../main.c":36:9 66 {*movdi_internal}
     (nil))
(insn 38 37 39 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "../main.c":36:9 69 {*movqi_internal}
     (nil))
(call_insn 39 38 40 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f8e1861ca00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "../main.c":36:9 677 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(code_label 40 39 41 5 7 (nil) [1 uses])
(note 41 40 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 5 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])
        (const_int 1 [0x1])) "../main.c":38:9 67 {*movsi_internal}
     (nil))
(insn 43 42 44 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":39:7 190 {*addsi_1}
     (nil))
(insn 44 43 45 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":40:7 190 {*addsi_1}
     (nil))
(insn 45 44 46 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":41:7 190 {*addsi_1}
     (nil))
(insn 46 45 47 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":42:7 190 {*addsi_1}
     (nil))
(insn 47 46 48 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":43:7 190 {*addsi_1}
     (nil))
(insn 48 47 49 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":44:7 190 {*addsi_1}
     (nil))
(insn 49 48 50 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":45:7 190 {*addsi_1}
     (nil))
(insn 50 49 51 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "../main.c":46:7 190 {*addsi_1}
     (nil))
(insn 51 50 52 5 (set (reg:SI 0 ax [97])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 a+0 S4 A32])) "../main.c":47:5 67 {*movsi_internal}
     (nil))
(insn 52 51 53 5 (set (reg:SI 4 si)
        (reg:SI 0 ax [97])) "../main.c":47:5 67 {*movsi_internal}
     (nil))
(insn 53 52 54 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f8e18704090 *.LC2>)) "../main.c":47:5 66 {*movdi_internal}
     (nil))
(insn 54 53 55 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "../main.c":47:5 69 {*movqi_internal}
     (nil))
(call_insn 55 54 56 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f8e1861ca00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "../main.c":47:5 677 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 56 55 64 5 (set (reg:SI 0 ax [orig:92 _29 ] [92])
        (const_int 0 [0])) "../main.c":48:12 67 {*movsi_internal}
     (nil))
(insn 64 56 68 5 (use (reg/i:SI 0 ax)) "../main.c":49:1 -1
     (nil))
(note 68 64 0 NOTE_INSN_DELETED)
